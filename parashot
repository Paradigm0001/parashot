#!/bin/sh
# shellcheck disable=SC2016 #Expressions in single quotes
# shellcheck disable=SC2155 #Declare and assign at same time is fine

# Declare vars
SCRIPTNAME="${0##*/}"
VERSION='1.1.0'

# Declare functions
help() {
	cat <<EOF
$SCRIPTNAME $VERSION

Usage: $SCRIPTNAME [OPTION]

Options:
	-h		Print this help message.

	-x		Copies the image to the clipboard after capture. (Requires xclip)

	-d [FORMAT]	Use custom date format for saved image name. Defaults to %Y-%m-%d_%T.
			Refer to date(1) for date format syntax.

	-b		Verboses a PC speaker beep upon screenshot.
			Beep tone determined by failure or success. (Requires beep)

	-o [DIR]	Set the output location for the screenshot. Defaults to CWD.

	-n		Display notification on completion of screenshot. (Requires libnotify)

	-c		Screenshots the current window and saves it to OUTPUT. (Requires xdotool)

Examples:
	$SCRIPTNAME
		This would give the user a selection tool and save the screenshot to the current working directory.

	$SCRIPTNAME -o ~/images/screenshots
		Same as the prior example and save the screenshot to '~/images/screenshots'

	$SCRIPTNAME -cxo ~/images/screenshots
		Capture the current window, copy it into the clipboard and save the screenshot to '~/images/screenshots'

	$SCRIPTNAME -cxbno ~/images/screenshots
		Same as the one above except with a notification and PC speaker beep on completion.
EOF
	exit "$1"
}

stderr() {
	printf '\033[1;31m%s\033[0m\n' "$@" >&2
}

error() {
	stderr "$@"
	help 1
}

checkInstalled() {
	if ! command -v "$1" >/dev/null 2>&1; then
		stderr "the $1 utility must be installed to use ${2:-the -${ARGS} flag}!"
		exit 1
	fi
}

# Check if maim is installed
checkInstalled "maim" "$SCRIPTNAME"

# \\ TODO
# \\ Add arg to supply args to maim
# \\ We're not going to do any checking to see if
# \\ the supplied args are vaild, thats up to the user lol

## Parse args
while getopts 'hbxo:d:nc' ARGS; do case $ARGS in
	h)
		help 0
	;;
	b)
		checkInstalled beep
		BEEP='true'
	;;
	x)
		checkInstalled xclip
		CLIPBOARD='true'
	;;
	o)
		# Check if output dir is viable
		if [ ! -e "$OPTARG" ]; then
			error 'The output location does not exist!'
		elif [ ! -w "$OPTARG" ]; then
			error 'The output location is not writable!'
		fi
		OUTPUT="$OPTARG"
	;;
	d)
		DATEFORMAT="$OPTARG"
	;;
	n)
		NOTIFICATION="true"
	;;
	c)
		checkInstalled xdotool
		export COMMAND='-i $(xdotool getactivewindow)'
	;;
	\?)
		help 1
	;;
esac; done
shift $((OPTIND - 1))

# Set vars
export FILENAME="$(realpath "${OUTPUT:-.}/$(date "${DATEFORMAT:-+%Y-%m-%d_%T}").png")"

# Main (Its so small!!)
if sh -c "maim -qouBm 5 -d 0.1 ${COMMAND:-'-s'} \"$FILENAME\""; then
#if false; then
	[ -n "$BEEP" ] && beep -f 1000 -n -f 750 &
	[ -n "$NOTIFICATION" ] && notify-send -t 5000 "Screenshot saved to: $FILENAME" &
	[ -n "$CLIPBOARD" ] && xclip -selection clipboard -t image/png -i "$FILENAME"
else
	[ -n "$BEEP" ] && beep -f 500 -n -f 250 &
	[ -n "$NOTIFICATION" ] && notify-send -t 5000 "Screenshot canceled" &
	echo "Screenshot canceled"
	exit 1
fi
